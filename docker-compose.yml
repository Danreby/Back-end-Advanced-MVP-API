services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DATABASE_URL: "mysql+pymysql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?charset=utf8mb4"
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  web:
    build:
      context: ../Back-end-Advanced-MVP-Interface
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    depends_on:
      - api
    volumes:
      - ../Back-end-Advanced-MVP-Interface:/app
      - node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE: "http://host.docker.internal:8000"
      CHOKIDAR_USEPOLLING: "true"
    entrypoint: ["npm", "run", "dev", "--", "--host"]
    # se estiver em Linux/WSL e host.docker.internal n√£o resolver, descomente:
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

volumes:
  mysql_data:
  node_modules:
